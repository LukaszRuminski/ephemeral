{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport App from 'next/app';\nimport Head from 'next/head';\nimport React from 'react';\nimport { getGlobalLabels } from '../adapters/contentful/contentful.adapters';\nimport { AuthProvider } from '../auth/authContext';\n\nvar MyApp = /*#__PURE__*/function (_App) {\n  _inherits(MyApp, _App);\n\n  var _super = _createSuper(MyApp);\n\n  _createClass(MyApp, null, [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n        var Component, ctx, pageProps, labels;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                Component = _ref.Component, ctx = _ref.ctx;\n                pageProps = {};\n                _context.next = 4;\n                return getGlobalLabels();\n\n              case 4:\n                labels = _context.sent;\n\n                if (!Component.getInitialProps) {\n                  _context.next = 9;\n                  break;\n                }\n\n                _context.next = 8;\n                return Component.getInitialProps(ctx);\n\n              case 8:\n                pageProps = _context.sent;\n\n              case 9:\n                return _context.abrupt(\"return\", {\n                  pageProps: pageProps,\n                  labels: labels.data.labelGroupCollection.items[0].labels\n                });\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  function MyApp(props) {\n    var _this;\n\n    _classCallCheck(this, MyApp);\n\n    _this = _super.call(this, props);\n\n    _this.componentDidMount = function () {\n      _this.setState({\n        isOidcReady: true\n      });\n    };\n\n    _this.state = {\n      isOidcReady: false\n    };\n    return _this;\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps,\n          labels = _this$props.labels;\n      var isOidcReady = this.state.isOidcReady;\n      return isOidcReady && __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, labels.title)), __jsx(AuthProvider, null, __jsx(Component, _extends({}, pageProps, {\n        globalLabels: labels\n      }))));\n    }\n  }]);\n\n  return MyApp;\n}(App);\n\nexport { MyApp as default };","map":null,"metadata":{},"sourceType":"module"}