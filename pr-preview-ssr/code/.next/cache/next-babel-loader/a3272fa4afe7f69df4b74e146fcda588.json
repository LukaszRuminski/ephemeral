{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Layout from '../components/Layout/Layout';\nimport H1 from '../components/H1/H1';\nimport styled from 'styled-components';\nimport { AuthContext } from \"../auth/authContext\";\nimport Unauthorized from '../components/Unauthorized/Unauthorized';\nconst ProfileWrapper = styled.div.withConfig({\n  displayName: \"profile__ProfileWrapper\",\n  componentId: \"asmrru-0\"\n})([\"display:flex;flex-direction:column;align-items:center;\"]);\nexport const Link = styled.a.withConfig({\n  displayName: \"profile__Link\",\n  componentId: \"asmrru-1\"\n})([\"text-decoration:none;cursor:pointer;margin-top:5px;padding:4px 8px 4px 8px;color:#ffffff;font-size:21px;line-height:25px;width:auto;border-bottom:3px solid #ffffff;&:hover{border-bottom:3px solid #E61E32;margin-bottom:-3px;}@media (min-width:800px){padding:0 4px;}\"]);\n\nclass Profile extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isProfileAvailable: false\n    };\n\n    this.renderUserInfo = () => {\n      const {\n        profile\n      } = this.state;\n      return __jsx(React.Fragment, null, __jsx(\"div\", null, __jsx(\"p\", null, 'Email: ' + profile.email + ' ', \" \", profile.email_verified ? 'verified' : 'not verified'), __jsx(\"p\", null, 'First name: ' + profile.given_name), __jsx(\"p\", null, 'Last name: ' + profile.family_name), __jsx(\"p\", null, 'country: ' + profile.address.country)), __jsx(Link, {\n        href: process.env.PROVIDER + '/auth-ui/profile?client_id=' + process.env.CLIENT_ID\n      }, \"Edit Profile\"));\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      authenticated,\n      getUser\n    } = this.context;\n\n    if (authenticated) {\n      const user = await getUser();\n      this.setState({\n        profile: user.profile,\n        isProfileAvailable: true\n      });\n    }\n  }\n\n  render() {\n    const {\n      authenticated\n    } = this.context;\n    const {\n      isProfileAvailable\n    } = this.state;\n    return __jsx(React.Fragment, null, authenticated ? isProfileAvailable && __jsx(Layout, {\n      pageTitle: 'ACE: Profile',\n      secondary: true\n    }, __jsx(ProfileWrapper, null, __jsx(H1, {\n      title: \"Profile Page\"\n    }), this.renderUserInfo())) : __jsx(Unauthorized, null));\n  }\n\n}\n\nProfile.contextType = AuthContext;\nexport default Profile;","map":null,"metadata":{},"sourceType":"module"}